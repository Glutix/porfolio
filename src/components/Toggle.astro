---
import Sun from "../icons/Sun.astro";
import Moon from "../icons/Moon.astro";
---

<div class="container">
  <label class="toggle" for="switch">
    <input id="switch" class="input" type="checkbox" />
    <div class="icon icon--sun">
      <Sun />
    </div>
    <div class="icon icon--moon">
      <Moon />
    </div>
  </label>
</div>

<style>
  .container {
    position: fixed;
    top: 1.3rem;
    right: 2rem;
    border-radius: 50%;
    z-index: 10;
  }

  .toggle {
    background-color: var(--text-title);
    width: 44px;
    height: 44px;
    border-radius: 50%;
    display: grid;
    place-items: center;
    cursor: pointer;
    box-shadow: 0 0 2px 2px var(--text-normal-variant);
    line-height: 1;
    transition: all 0.3s ease;
  }

  .toggle:hover {
    box-shadow: 0 0 4px 4px var(--text-title);
  }

  .input {
    display: none;
  }

  .icon {
    grid-column: 1 / 1;
    grid-row: 1 / 1;
    transition: transform 500ms;
  }

  .icon--moon {
    transform: scale(0);
    transition-delay: 50ms;
    color: var(--primary-color);
  }

  .icon--sun {
    transition-delay: 50ms;
    color: var(--primary-color);
  }

  #switch:checked ~ .icon--moon {
    transition-delay: 50ms;
    transform: scale(1) rotate(360deg);
  }

  #switch:checked + .icon--sun {
    transform: rotate(360deg) scale(0);
  }

  /* Mobile Large */
  @media (max-width: 768px) {
    .toggle {
      width: 40px;
      height: 40px;
    }
  }

  /* Mobile Medium */
  @media (max-width: 480px) {
    .container {
      top: 0.8rem;
      right: 0.5rem;
    }

    .toggle {
      width: 30px;
      height: 30px;
    }
  }

  /* Mobile Small */
  @media (max-width: 390px) {
    .container {
      top: 0.6rem;
      right: 0.4rem;
    }

    .toggle {
      width: 24px;
      height: 24px;
    }
  }
</style>

<script>
  const toggleInput = document.getElementById("switch") as HTMLInputElement;
  const body = document.body;

  function applyTheme(theme: string) {
    body.setAttribute("data-color-scheme", theme);
    localStorage.setItem("theme", theme);
    toggleInput.checked = theme === "light";
  }

  function getDefaultSystemTheme() {
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  }

  function setDefaultUserTheme() {
    const storedTheme = localStorage.getItem("theme");
    const systemTheme = getDefaultSystemTheme();
    applyTheme(storedTheme || systemTheme);
  }

  function handleToggle() {
    const newTheme = toggleInput.checked ? "light" : "dark";
    applyTheme(newTheme);
  }

  function handleSystemThemeChange(event: MediaQueryListEvent) {
    const newTheme = event.matches ? "dark" : "light";
    applyTheme(newTheme);
  }

  document.addEventListener("DOMContentLoaded", setDefaultUserTheme);
  toggleInput.addEventListener("change", handleToggle);
  window
    .matchMedia("(prefers-color-scheme: dark)")
    .addEventListener("change", handleSystemThemeChange);
</script>
