---
import Sun from "../icons/Sun.astro";
import Moon from "../icons/Moon.astro";
---

<div class="container">
  <label class="toggle" for="switch">
    <input id="switch" class="input" type="checkbox" />
    <div class="icon icon--sun">
      <Sun />
    </div>
    <div class="icon icon--moon">
      <Moon />
    </div>
  </label>
</div>

<style>
  .container {
    position: fixed;
    top: 1rem;
    right: 1.3rem;
    border-radius: 50%;
  }

  .toggle {
    background-color: var(--text-title);
    width: 44px;
    height: 44px;
    border-radius: 50%;
    display: grid;
    place-items: center;
    cursor: pointer;
    box-shadow: 0 0 50px 20px rgba(0, 0, 0, 0.1);
    line-height: 1;
  }

  .input {
    display: none;
  }

  .icon {
    grid-column: 1 / 1;
    grid-row: 1 / 1;
    transition: transform 500ms;
  }

  .icon--moon {
    transform: scale(0);
    transition-delay: 50ms;
    color: var(--primary-color);
  }

  .icon--sun {
    transition-delay: 50ms;
    color: var(--primary-color);
  }

  #switch:checked ~ .icon--moon {
    transition-delay: 50ms;
    transform: scale(1) rotate(360deg);
  }

  #switch:checked + .icon--sun {
    transform: rotate(360deg) scale(0);
  }

  @media (max-width: 697px) {
    .container {
      right: 0.5rem;
    }
  }
</style>

<script>
  const toggleInput = document.getElementById("switch") as HTMLInputElement;
  const body = document.body;

  // Función para aplicar el tema
  function applyTheme(theme: string) {
    if (theme === "dark") {
      body.setAttribute("data-color-scheme", "dark");
    } else {
      body.setAttribute("data-color-scheme", "light");
    }
  }

  // Al cargar la página
  document.addEventListener("DOMContentLoaded", () => {
    const storedTheme = localStorage.getItem("theme");
    if (storedTheme) {
      applyTheme(storedTheme);
      toggleInput.checked = storedTheme === "light";
    } else {
      const prefersDarkScheme = window.matchMedia(
        "(prefers-color-scheme: dark)"
      );
      applyTheme(prefersDarkScheme.matches ? "dark" : "light");
    }
  });

  // Manejar cambios de tema cuando se activa el toggle
  toggleInput.addEventListener("change", () => {
    const newTheme = toggleInput.checked ? "light" : "dark";
    applyTheme(newTheme);
    localStorage.setItem("theme", newTheme);
  });

  // Detectar cambios en el tema preferido del sistema
  window
    .matchMedia("(prefers-color-scheme: dark)")
    .addEventListener("change", (e) => {
      const newTheme = e.matches ? "dark" : "light";
      toggleInput.checked = newTheme === "light";
      applyTheme(newTheme);
      localStorage.setItem("theme", newTheme);
    });
</script>
